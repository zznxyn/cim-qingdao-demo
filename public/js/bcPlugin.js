// 加载shp
function initShpManager(bcScene, shpOptions) {
    let scene = bcScene;
    if (shpOptions.colorTables && shpOptions.colorTables.length > 0) {
        let tableSet = [];
        let colorTableBase = {};
        for (let i = 0; i < shpOptions.colorTables.length; i++) {
            tableSet = tableSet.concat(Object.keys(shpOptions.colorTables[i]));
        }
        tableSet = Array.from(new Set(tableSet));
        tableSet.map(key=>{
            colorTableBase[key] = [1, 1, 1, 0.5];
        });
        shpOptions.colorTables.unshift(colorTableBase);
    }
    let dataSource = new Array(shpOptions.colorTables.length);
    let colorTable = {};
    for (let i = 0; i < shpOptions.colorTables.length; i++) {
        let table = shpOptions.colorTables[i];
        Object.assign(colorTable, table);
        if (!shpOptions.lineWidth) {
            addShp(shpOptions.shpUrl, shpOptions.styleField, Object.assign({}, colorTable), data => {
                data.show = false;
                dataSource[i] = data;
            });
        } else {
            addGeoJson(shpOptions.shpUrl, shpOptions.color, shpOptions.lineWidth, shpOptions.styleField, Object.assign({}, colorTable), data => {
                data.show = false;
                dataSource[i] = data;
            });
        }
    }

    function addShp(shpUrl, styleField, colorTable, callback) {
        scene._vectorLayerManager.loadShapefile({
            shp: shpUrl,
            extrudedHeightField: "Population",
            extrudedHeightScale: 0.002,
            outline: false,
            color: [1.0, 1.0, 1.0, 0],
            clampToGround: true,
            styleField: styleField,
            colorTable: colorTable,
        }, (isSucceed, data) => {
            if (isSucceed && typeof callback === 'function') {
                callback(data);
            }
        });
    }

    function addGeoJson(shpUrl, color, lineWidth, styleField, colorTable, callback) {
        scene._vectorLayerManager.loadGeoJson(shpUrl, {
            outline: true,
            color: color ? color : [0, 0, 1, 0],
            lineWidth: lineWidth,
            clampToGround: true,
            styleField: styleField,
            colorTable: colorTable,
        }, (isSucceed, data) => {
            if (isSucceed && typeof callback === 'function') {
                callback(data);
            }
        });
    }

    function showShp(duration, drop) {
        duration = duration || 1000;
        let index = 0;
        let timer = setInterval(() => {
            for (let i = 0; i < dataSource.length; i++) {
                if(dataSource[i]){
                    if(index < drop) {
                        dataSource[i].show = index === i;
                    } else if(index === i){
                        dataSource[i].show = true;
                    }
                }
            }
            if (++index === dataSource.length) {
                clearInterval(timer);
            }
        }, Math.round(duration / dataSource.length));
    }

    function destroy() {
        dataSource.forEach(data => {
            scene._vectorLayerManager.removeDataSource(data);
        });
    }

    return {
        showShp,
        destroy,
        hideShp: () => {
            for (let i = 0; i < dataSource.length; i++) {
                dataSource[i].show = false;
            }
        },
        dataSource
    }
}

// 加载标签
function initLabelManager(bcScene) {
    let scene = bcScene;
    let divLabels = {};
    let divIsMoving = false;
    let destroyedEvent;

    /**
     * 初始化事件监听
     */
    function initEventListener() {
        destroyedEvent = scene._viewer.camera.changed.addEventListener(() => {
            if (!divIsMoving) {
                divIsMoving = true;
                Object.keys(divLabels).forEach(id => {
                    updateLabelPosition(id);
                });
                divIsMoving = false;
            }
        })
    }

    /**
     * 添加DIV标签
     * @param option {{}} 参数
     * @example
     * {
     *     divId: "divId1",
     *     position: [106, 29, 0],
     *     show: true,
     * }
     */
    function addLabel(option) {
        option.id = option.id || guid();
        option.dom = document.getElementById(option.divId);
        option.position = scene.gcs2wcs(option.position);
        option.show = typeof option.show === 'undefined' ? true : option.show;
        divLabels[option.id] = option;
        updateLabelPosition(option.id);
        if (option.show) {
            showLabel(option.id, true);
        }
        return option.id;
    }

    /**
     * 批量显隐标签
     * @param {string} id 标签ID
     * @param {boolean} show 是否显示
     */
    function showLabel(id, show) {
        divLabels[id].show = show;
        divLabels[id].dom.style.display = show ? 'block' : 'none';
    }

    /**
     * 删除标签
     * @param id
     */
    function removeLabel(id) {
        showLabel(id, false);
        delete divLabels[id];
    }

    /**
     * 销毁
     */
    function destroy() {
        destroyedEvent();
        Object.keys(divLabels).forEach(id => {
            removeLabel(id, false);
        });
    }

    /**
     * 更新标签位置
     * @param {string} id 标签ID
     */
    function updateLabelPosition(id) {
        let label = divLabels[id];
        if (!label.dom) {
            return;
        }
        let dom = label.dom;
        try {
            let cameraPosition = scene._viewer.camera.position;
            let position = scene.wcs2scc(label.position);
            dom.style.left = position.x + 'px';
            dom.style.top = position.y + 'px';
            if (label.show) {
                dom.style.display = 'block';
                let distance = getSpaceDistance([cameraPosition, label.position]);
                distance = Math.round(distance);
                dom.style.zIndex = 2147483647 - distance;
            }
        } catch (e) {
            //console.log(e);
            dom.style.display = 'none';
        }
    }

    /**
     * 生成guid
     */
    function guid() {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
            let r = Math.random() * 16 | 0,
                v = c === 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    }

    /**
     * 获取两点直线距离
     * @param positions
     * @returns {number}
     */
    function getSpaceDistance(positions) {
        let distance = 0;
        for (var i = 0; i < positions.length - 1; i++) {
            let point1 = positions[i];
            if (Array.isArray(positions[i])) {
                point1 = scene.gcs2wcs(positions[i]);
            }
            let point2 = positions[i + 1];
            if (Array.isArray(positions[i + 1])) {
                point2 = scene.gcs2wcs(positions[i + 1]);
            }
            /**根据世界坐标计算出距离**/
            let s = Math.sqrt(Math.pow(point1.x - point2.x, 2) + Math.pow(point1.y - point2.y, 2) + Math.pow(point1.z - point2.z, 2));
            distance = distance + s;
        }
        return distance;
    }

    initEventListener();
    return {
        divLabels,
        addLabel,
        showLabel,
        removeLabel,
        destroy,
    }
}


// 加载河流 
function addWater(bcScene) {
    var scene = bcScene._scene;
    // 湖泊
    var waterPrimitive = new BcEngineX.Primitive({
        show: true,
        allowPicking: false,
        geometryInstances: new BcEngineX.GeometryInstance({
            geometry: new BcEngineX.PolygonGeometry({
                polygonHierarchy: new BcEngineX.PolygonHierarchy(
                    BcEngineX.Cartesian3.fromDegreesArrayHeights([120.20228509237405, 36.34309580558667, -0.0573902575027364, 120.2024166549378, 36.34298562312047, -0.05652842202082399, 120.20258684670223, 36.34289756086213, -0.05572425785787829, 120.20280757149493, 36.34283811165022, -0.05483694462318499, 120.20312145959372, 36.342819882113666, -0.054786133004328726, 120.20354862695166, 36.34282594617285, -0.05480734181067502, 120.21867911703673, 36.343180293102755, -0.03469952071193448, 120.2188455150558, 36.34319495044354, -0.03483243213944515, 120.21898167087228, 36.34323683057674, -0.035192267145724085, 120.21913418414495, 36.343299174513945, -0.03578312604887661, 120.21926434649018, 36.343361979263655, -0.0361413272332942, 120.21941367272844, 36.34345979761771, -0.037025156427385256, 120.23674661884918, 36.356969025873006, -0.033997781103374286, 120.23686572050995, 36.35706390500969, -0.03470003586495353, 120.23696168604353, 36.357184193711056, -0.03561948702607893, 120.23702428961575, 36.35730704085147, -0.03671828618570031, 120.2370682395375, 36.357471082553204, -0.03816775103006721, 120.23707574444991, 36.35770767396327, -0.04023065889686751, 120.23712466142568, 36.37534097122729, -0.03259225696068975, 120.23712412052262, 36.375442634787056, -0.033450087790717196, 120.23710344668906, 36.37554397918775, -0.03437392729086118, 120.2370696783045, 36.375636849063525, -0.03510969185929063, 120.23701500194406, 36.37572768718688, -0.036051840624435026, 120.2368744739449, 36.37586315656939, -0.03705100306358944, 120.23140457587083, 36.380919657380446, -0.035071903943180986, 120.23133086164442, 36.38096503215147, -0.035272536979058425, 120.23126290776827, 36.381002360467, -0.03570658144573099, 120.23115582124895, 36.381038830708974, -0.03618988394594371, 120.21497462860488, 36.38550953172866, -0.022655168621998383, 120.21483686313273, 36.385544284264796, -0.02303138357244268, 120.21476978004257, 36.38555544868083, -0.023061032594255713, 120.21463998542617, 36.38556388421642, -0.02328338892452605, 120.21450123139931, 36.38556482452461, -0.023274827942322576, 120.20440980277303, 36.385323185120455, -0.025751855541125364, 120.20427188525647, 36.385315772039036, -0.025634200438377837, 120.20415886085858, 36.385301056011635, -0.025573951340715616, 120.20406238661401, 36.38528028170716, -0.02540888076921874, 120.20397611336256, 36.38525573129007, -0.025162533025299583, 120.20388446644976, 36.38521867044474, -0.02478219141083559, 120.2038209819048, 36.385178681135976, -0.024420741265808243, 120.20374486110337, 36.38510923049476, -0.02381990125712291, 120.20367046141025, 36.38504919788935, -0.02335652906622428, 120.20360716487848, 36.38497416691869, -0.022689150148298313, 120.20354878779985, 36.384890645622775, -0.022018158401372816, 120.19613659924545, 36.37196870401818, -0.02557988432838586, 120.19610297278554, 36.37190442476479, -0.025108626394200303, 120.19607390276067, 36.37183774761697, -0.024526609242125536, 120.19605136091323, 36.37178282554138, -0.02406872912368247, 120.19603381901432, 36.37171217170056, -0.023467105248238182, 120.19602609612808, 36.37164144832039, -0.02283849341928272, 120.19602079814905, 36.3715617583766, -0.02223864426728323, 120.19602240744526, 36.37147888003035, -0.021525513976985742, 120.19680537548714, 36.34969860101269, -0.027226600063312532, 120.19681537987742, 36.34955883270503, -0.025966376037919684, 120.1968310617441, 36.34943182663683, -0.02518610407319793, 120.19687141316517, 36.34930558026545, -0.02388889402354763, 120.19693001042306, 36.349207111859705, -0.023226593149667397, 120.19701036922312, 36.34909596880367, -0.022151517739545216, 120.19706263966613, 36.34904039703488, -0.02623418247285707])
                ),
                vertexFormat: BcEngineX.EllipsoidSurfaceAppearance.VERTEX_FORMAT,
                height: 1,
                extrudedHeight: 0, //注释掉此属性可以只显示水面
                // perPositionHeight: true//注释掉此属性水面就贴地了
            })
        }),
        // 可以设置内置的水面shader
        appearance: new BcEngineX.EllipsoidSurfaceAppearance({
            aboveGround: true,
            material: new BcEngineX.Material({
                fabric: {
                    type: 'Water',
                    uniforms: {
                        normalMap: './image/waterNormals.jpg',
                        frequency: 1000.0,
                        animationSpeed: 0.02,
                        amplitude: 3.0
                    }
                }
            }),
            fragmentShaderSource: 'varying vec3 v_positionMC;\nvarying vec3 v_positionEC;\nvarying vec2 v_st;\nvoid main()\n{\nczm_materialInput materialInput;\nvec3 normalEC = normalize(czm_normal3D * czm_geodeticSurfaceNormal(v_positionMC, vec3(0.0), vec3(1.0)));\n#ifdef FACE_FORWARD\nnormalEC = faceforward(normalEC, vec3(0.0, 0.0, 1.0), -normalEC);\n#endif\nmaterialInput.s = v_st.s;\nmaterialInput.st = v_st;\nmaterialInput.str = vec3(v_st, 0.0);\nmaterialInput.normalEC = normalEC;\nmaterialInput.tangentToEyeMatrix = czm_eastNorthUpToEyeCoordinates(v_positionMC, materialInput.normalEC);\nvec3 positionToEyeEC = -v_positionEC;\nmaterialInput.positionToEyeEC = positionToEyeEC;\nczm_material material = czm_getMaterial(materialInput);\n#ifdef FLAT\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#else\ngl_FragColor = czm_phong(normalize(positionToEyeEC), material);\ngl_FragColor.a=0.75;\n#endif\n}\n' //重写shader，修改水面的透明度
        })
    });
    // 河流
    var waterPrimitive2 = new BcEngineX.Primitive({
        show: true,
        allowPicking: false,
        geometryInstances: [
            new BcEngineX.GeometryInstance({
                geometry: new BcEngineX.PolygonGeometry({
                    polygonHierarchy: new BcEngineX.PolygonHierarchy(
                        BcEngineX.Cartesian3.fromDegreesArray([120.12253841800009,36.34390547400005,120.12295964700002,36.343099376000055,120.12346535600011,36.34213158700004,120.12386718700009,36.34136256700003,120.12531296200007,36.33991916900004,120.1284278600001,36.33748267200008,120.13054132900004,36.33576813700006,120.13154286800011,36.33522633000007,120.13332360300001,36.33441329300007,120.13499432100002,36.33441141700007,120.13833575600006,36.33440759600006,120.14112028500006,36.33440434100004,120.14423862400008,36.33422038200007,120.14601920400003,36.33340715600008,120.14657424500001,36.33241517600004,120.14679632500008,36.332054431000074,120.14645831300004,36.32998212500007,120.14600877800001,36.32781983600006,120.14544739700011,36.325387326000055,120.14499958700003,36.324126213000056,120.14332578900007,36.32232586500004,120.14221034900004,36.32133589400007,120.1391992340001,36.318906241000036,120.13529668100011,36.31602693100007,120.1308366070001,36.312517273000026,120.12637707800002,36.30909756400007,120.12202927900012,36.305677573000025,120.1184015990001,36.30294875200008,120.11732977800011,36.302136974000064,120.11645569600012,36.301267316000065,120.11344354100004,36.29703462900005,120.11277323800005,36.29541312500004,120.1158806310001,36.28883147600004,120.11810985800003,36.285895319000076,120.11854977200005,36.28720671900004,120.11966594000012,36.28918822300005,120.12122786200007,36.29143962200004,120.123570416,36.294501266000054,120.12691642700008,36.29837286900005,120.13104106100002,36.30161269400003,120.13296342700005,36.303122537000036,120.13427331600008,36.303681838000045,120.13700717400002,36.304849079000064,120.13917824800001,36.30710073800003,120.14029473900007,36.30881168600007,120.14130090600008,36.311063466000064,120.14219447200003,36.312594422000075,120.14286355900003,36.31313433500003,120.14403448300004,36.31407917400003,120.14498189500011,36.31457368100007,120.14698912300003,36.31610324400003,120.14944340700004,36.31844328100004,120.15145082100003,36.31997276800007,120.15249403000007,36.320477492000066,120.15312281600006,36.32078170300008,120.15512964800007,36.32195065500008,120.1564678090001,36.322850095000035,120.15747208500011,36.323840078000046,120.15983372400001,36.32616797400004,120.16193567500011,36.328159793000054,120.16280636700003,36.32898482500008,120.16372215400008,36.33032019700005,120.16401092400008,36.33074126300005,120.16417011200008,36.33149112000007,120.16428357000007,36.33248226500007,120.1642856520001,36.33347356200005,120.16395415600005,36.33473567200008,120.16339950700001,36.33581784900008,120.16306611000005,36.33617877700004,120.1617319290001,36.33735212600004,120.16017438100005,36.33825540500004,120.1585048610001,36.33888845800004,120.15716893600006,36.33925069500003,120.15658565800004,36.339408846000026,120.1562671800001,36.33949519600003,120.15516484700004,36.33970390400003,120.15416252700004,36.339795319000075,120.15338280500009,36.33979632200004,120.1527142970001,36.33970706000008,120.15215700300007,36.33952753500006,120.15137693600002,36.33934828900004,120.151038416,36.339270500000055,120.150040278,36.33934997500006,120.14870447700002,36.339802235000036,120.14770265900006,36.34016395000003,120.14692805000004,36.34044362000003,120.14525309800001,36.34070766100007,120.14113166400011,36.34071259900003,120.13489381700003,36.340719802000024,120.13366867900004,36.34081129700007,120.13288925300003,36.34099240300003,120.13199873700012,36.34135386200006,120.13077479100002,36.34216627100005,120.12810462400012,36.344151761000035,120.12758568800007,36.34453761200007,120.12777205900011,36.34514341500005,120.12888706300009,36.345773044000055,120.12966818900009,36.346583262000024,120.13022638300004,36.34730359900004,120.1312307930001,36.348383917000035,120.13167837000003,36.349554958000056,120.13167882500011,36.349825312000064,120.13168064700005,36.35090672500007,120.13134764400002,36.35162803600008,120.13134961200001,36.352799567000034,120.13135158000011,36.353971098000045,120.13157591400011,36.354872030000024,120.13202292500011,36.355682598000044,120.13224742500006,36.35667364700004,120.13247132000004,36.357304224000075,120.13260724300005,36.35762470700007,120.13280648000011,36.35784455900006,120.1339218600001,36.35856425700007,120.13447986800008,36.359104337000076,120.13470363300007,36.35964479200004,120.13470472000006,36.360275616000024,120.13437232500007,36.361357404000046,120.13415025900008,36.36180824300004,120.13415087800001,36.362168713000074,120.1341553640001,36.364782124000044,120.13426740700004,36.365142469000034,120.13427282700002,36.368296583000074,120.13405089500009,36.368837539000026,120.13360594500011,36.36928862600007,120.13246641400008,36.370443840000064,120.13204895800004,36.37109271000003,120.13144158800003,36.372165016000054,120.13109183200004,36.37313399900006,120.13082712000005,36.37361292700007,120.13049506700008,36.37392942500003,120.13010201000009,36.37416081400005,120.12970680400008,36.374297942000055,120.12891833200001,36.37458056200006,120.12793226500003,36.37497224800006,120.12603911000008,36.375785319000045,120.1238123060001,36.377049294000074,120.12058368800001,36.379125300000055,120.11869172500008,36.38083942800006,120.11757955700011,36.38237252600004,120.11724669700004,36.383364146000076,120.11702609000008,36.38489635900004,120.11702933100003,36.38705917500005,120.11681208100003,36.39084431900005,120.11714849400005,36.39219575000004,120.11770703500008,36.393006257000025,120.11904708600002,36.394627041000035,120.12127936700006,36.39651725900006,120.12228457200001,36.39777787600008,120.12293779100003,36.39859704300005,120.1232909470001,36.399759421000056,120.12329351000005,36.40138152800006,120.1232945060001,36.40201234800003,120.12296177700011,36.403094097000064,120.12296404900007,36.40453597000004,120.12296632100004,36.40597784200003,120.12241102500002,36.40733017000008,120.12196761900009,36.408952731000056,120.12197043700007,36.41075507000005,120.12230646100011,36.41174601400007,120.12270711600002,36.412927523000064,120.12289323100003,36.41347635100004,120.12304315900008,36.41391846400006,120.12304428000004,36.41462900200003,120.12275795700009,36.415260115000024,120.12175645800005,36.41652277900005,120.12075436700002,36.417424966000056,120.12019742500001,36.41778599600008,120.11932804000003,36.41834954900003,120.11897298400004,36.419138977000046,120.11854017000007,36.42010126800005,120.11854103600001,36.42067139400007,120.11875409600009,36.42184270200005,120.11875560600004,36.42283398700005,120.11898040800008,36.42400528300004,120.11976318600011,36.42544637000003,120.12143823800011,36.42697666400005,120.12355884700003,36.428146007000066,120.12478695400011,36.42904589800003,120.12595395900007,36.429900986000064,120.1269091370001,36.43111634700006,120.12992601200006,36.43462765500004,120.13193680300003,36.436608017000026,120.13316514000007,36.437507820000064,120.13405814200007,36.43795740400003,120.13573233200009,36.438676445000056,120.13684826400004,36.439035638000064,120.13763009200011,36.43966555600008,120.13830103900011,36.44065606300006,120.13836319900008,36.44090532200005,120.1360330440001,36.441301914000064,120.13495677100002,36.441651173000025,120.13216994300001,36.442555457000026,120.1340753500001,36.447960325000054,120.13698482300003,36.45327389200003,120.13775801300005,36.45381370100006,120.13776279400008,36.45651718700003,120.13776406900001,36.45723811700003,120.13754957900005,36.457238364000034,120.1366568410001,36.45707633500007,120.1347595740001,36.45661073200006,120.13386650900009,36.45625127100004,120.1325438020001,36.45544170000005,120.13175377200002,36.45474442500006,120.13162203800005,36.454590309000025,120.1316317510001,36.454090963000056,120.12984466500006,36.45274117400004,120.12984361400004,36.45211036000006,120.12962006500004,36.45184025400005,120.12950791700007,36.451479910000046,120.12923084900001,36.45058964700007,120.1293941240001,36.45012828600005,120.12939277700002,36.44931724000003,120.12928063400011,36.44895689500004,120.12927869000009,36.44778538300005,120.12927779300003,36.447244685000044,120.12904813500006,36.44679435000006,120.12894797600006,36.44570451200008,120.12887936000004,36.44533439600008,120.128716284,36.44494655900007,120.12838104700006,36.44457032100007,120.12785116500004,36.444023956000024,120.12734852300002,36.44362197700008,120.12719477200005,36.44338510700004,120.12715157800005,36.44301149000006,120.12709368800006,36.44260127500007,120.12701665700001,36.44184853500008,120.12680087800004,36.44070288700004,120.126677416,36.43992598900007,120.12645902000008,36.43918365800005,120.12629323100009,36.438691935000065,120.1259630180001,36.438191318000065,120.12558164900008,36.43778638800006,120.12372878400004,36.43584991100005,120.12261874700005,36.43467005700006,120.12150899300002,36.43364523400004,120.12020230300004,36.43246120400005,120.11994539500006,36.43227336900003,120.11953227700008,36.43175477800003,120.11889908100011,36.43103243400003,120.11753948300009,36.42977418700008,120.11474876500006,36.42788444900003,120.11285079900006,36.426354272000026,120.11241415200004,36.42594985300008,120.11214873100005,36.42547500000006,120.11203024800011,36.425264035000055,120.11192926000001,36.424823152000045,120.1118002720001,36.42407261200003,120.11176811400003,36.42293084900007,120.11173563900002,36.42205619300006,120.1116171970001,36.42148911900006,120.1116155200001,36.42031760100008,120.11172586200007,36.419506445000025,120.11205855800006,36.41824449600006,120.11247671500007,36.41763032700004,120.11298340100006,36.41709952000008,120.11318867200009,36.41678037500003,120.11361681300002,36.41635056700005,120.11472967400005,36.41490763000007,120.1158423600001,36.41337456700006,120.11617576800006,36.41265330600004,120.11619766100011,36.41166199700007,120.11606172800009,36.41094119300004,120.1159814560001,36.410588131000054,120.11576608400003,36.410114425000074,120.11550227500004,36.40958997900003,120.11456701300006,36.40820106100006,120.11435461300005,36.40778874100005,120.11412243900008,36.40707863500006,120.11405028500008,36.40643719800005,120.11415887600003,36.405806351000024,120.1143807850001,36.405085202000066,120.11482472400007,36.403733018000025,120.11471086000006,36.40211101800003,120.11403962300005,36.40048955100008,120.1132695440001,36.398745011000074,120.11287611500006,36.39816833400005,120.11224741600006,36.39739843600006,120.111581752,36.39670694700004,120.110620831,36.39544619800006,120.11034563600003,36.39436504500003,120.11031867200006,36.39377824600007,120.11068411400004,36.392562385000076,120.11099677800007,36.39166092100004,120.11112727700004,36.39066950800003,120.11112535300003,36.38931774900004,120.11123514400003,36.388146121000034,120.11145651600009,36.38706450500007,120.11156745700009,36.386703932000046,120.11159997300001,36.385143861000074,120.11154011600001,36.38432063100004,120.11143887900005,36.38367310000007,120.11133902100005,36.382829093000055,120.11140771100008,36.38210808900004,120.1115383990001,36.381438434000074,120.11168273700002,36.380826409000065,120.1120041040001,36.38030518100004,120.11244846400007,36.379313470000056,120.11278201900006,36.37877245000004,120.11322649100009,36.37787085400004,120.11344872300003,36.37742005500007,120.11394982800005,36.376464449000025,120.11438544300006,36.37588716300007,120.1147801950001,36.37556336600005,120.11512641600007,36.37540216100007,120.11564563700006,36.375284728000054,120.11667713800011,36.375128440000026,120.11718048600005,36.37497829800003,120.11756816400009,36.374802662000036,120.1191270700001,36.37399005900005,120.12179932600009,36.37254548200008,120.12246751500004,36.37227444600006,120.12380302400004,36.371191657000054,120.12558350000006,36.36965779800005,120.12647378400004,36.368935918000034,120.12736361200007,36.367943678000074,120.12803115200006,36.367312140000024,120.12814228400009,36.36713178600007,120.12814125000011,36.36650096300008,120.12813814700007,36.36460849300005,120.12802421300012,36.36307661300003,120.12779989600006,36.36217567500006,120.12757602500005,36.36154509000005,120.12690531100009,36.36019403700004,120.12656989000004,36.35947345000005,120.12578852100012,36.35857309600004,120.12489633200005,36.358033325000065,120.12311270100008,36.35740435100007,120.12233252100009,36.357224916000064,120.1204384880001,36.35722684000007,120.11854513700007,36.35767932300007,120.11687553800004,36.358762382000066,120.11665270600008,36.358762600000034,120.11609589400007,36.35894337800005,120.11420642700011,36.36209932400004,120.1138733470001,36.36291070200008,120.11376323700006,36.36381198500004,120.11398647700003,36.36408212500004,120.11510190700005,36.36489211600008,120.11655163700004,36.36570177100003,120.11722100300005,36.36624182200006,120.11766765900006,36.366872208000075,120.11778071700007,36.367953509000074,120.11778139600005,36.36840409700005,120.11767091600007,36.36903503000008,120.11763777200008,36.36922431000005,120.11711511400006,36.36993675300005,120.1160019990001,36.370748898000045,120.1147166610001,36.37168666600007,120.11412625500009,36.37211740500004,120.11299528400002,36.37211848100003,120.11266097900011,36.37211879600005,120.11232704100007,36.37237452800008,120.11221612300005,36.372735103000025,120.11205300600011,36.373265358000026,120.11194208600011,36.37362593300003,120.11171371700004,36.37436829300003,120.1117147330001,36.375078632000054,120.11171589300011,36.375889689000076,120.11144237100007,36.37715159100003,120.11133311200001,36.37868369200004,120.11127508900006,36.37949728900003,120.11100108400001,36.38030611700003,120.11089027700007,36.38075680700007,120.11077946900002,36.38120749800004,120.1104461440001,36.381928747000075,120.10955619600009,36.38310109400004,120.10777460100007,36.38427424200006,120.10655010100004,36.38535675000003,120.10565932300005,36.38598836400007,120.10547801200005,36.38611692200004,120.10309633800011,36.38635107300007,120.10253929800001,36.38653178800007,120.10242819700011,36.38680223500006,120.1021615520001,36.38745130900003,120.10198402100002,36.38806426000008,120.10209701100007,36.38923569000008,120.10165211100002,36.38995700900006,120.10053924700003,36.391309711000076,120.09909218000007,36.39284291600006,120.09831294900005,36.39365461600005,120.09731088000001,36.39455661000005,120.0963094550001,36.39599929900004,120.09508395300008,36.39654098500006,120.09419273800006,36.39699227800003,120.09385875900011,36.397353010000074,120.09385930100007,36.397803596000074,120.09408420000011,36.39942553000003,120.09437044900005,36.40137606500008,120.09441001000005,36.40164563800005,120.09453380700006,36.40248916200005,120.09509504200003,36.40564281800005,120.09543268700008,36.40825594700004,120.09577013300009,36.410688839000045,120.09633303600003,36.41510412200006,120.09655859400004,36.417176631000075,120.09723444400004,36.42267321800006,120.09757279900009,36.42573691600006,120.09735326300006,36.42853071800005,120.09702230500011,36.431414725000025,120.09702264100008,36.431685075000075,120.09535612200011,36.43682307200004,120.09535689400002,36.43745388800005,120.094579038,36.439797541000075,120.09313429500003,36.444124275000036,120.09190992800006,36.44628802200003,120.09046387100011,36.44971355500007,120.09046408000006,36.449893788000054,120.09057583600008,36.450073936000024,120.09057615000006,36.45034428500003,120.09035316100005,36.45043457100007,120.09013006700002,36.45043473900006,120.08990686900006,36.45034479100008,120.0894606810001,36.45034512600006,120.08756610700004,36.451878512000064,120.08678616700001,36.452690130000065,120.08533729700002,36.45386268800007,120.08422323900004,36.455215226000064,120.08255203300007,36.457198955000024,120.08243952200007,36.456297869000025,120.08299614700002,36.455216086000064,120.08333051900001,36.45494550300003,120.08377644200004,36.45467484200003,120.0847790470001,36.45341250400003,120.08678486200006,36.451518616000044,120.08901387600008,36.44980476100005,120.08901356700005,36.44953441200005,120.08901325800002,36.449264063000044,120.08945923300007,36.44908349600007,120.09001643700003,36.44863249500003,120.09135158900006,36.445747751000056,120.09246496000003,36.444034679000026,120.09324335300005,36.44205150800008,120.09379896700011,36.44033885600004,120.09379853300004,36.43997839000008,120.09346372100003,36.439798419000056,120.09468564400004,36.435742205000054,120.09579658400003,36.43222676600004,120.09612970300009,36.431054980000056,120.09635029100002,36.42907223200007,120.0965710910001,36.42726971700006,120.0965678550001,36.42465633000006,120.09623010000007,36.42204321300005,120.09578053300004,36.41915983200005,120.09487963700008,36.41186107200008,120.09443007000004,36.408887564000054,120.09398010400002,36.405553584000074,120.09353125700011,36.40312077200008,120.09326257600003,36.40164653900007,120.09321344700004,36.40137697400007,120.09285798500002,36.39942649000005,120.09263300500004,36.39771443600006,120.09274372700008,36.39708352900004,120.09285466200004,36.39663285700004,120.09318896500008,36.39654247900006,120.09385724200001,36.39609136900003,120.09541682100007,36.395279077000055,120.09586202900005,36.394738017000066,120.0961956540001,36.39410692700005,120.09764325200001,36.39293422700007,120.09875653200004,36.39185190300003,120.09986989600009,36.390859686000056,120.10064885100007,36.389867741000046,120.10087118900003,36.389416966000056,120.10098206600003,36.38896628500004,120.10131574200011,36.38842529800007,120.1013146900001,36.38761424200004,120.10153654900012,36.386802997000075,120.10175840400007,36.38599175100006,120.1018340930001,36.38571497200007,120.1018862950001,36.38552409000005,120.1036517010001,36.38490871300007,120.10409751400005,36.38490832600007,120.10621414600007,36.38418552200005,120.10754995900004,36.383012800000074,120.10856566300004,36.38212106900005,120.10933077100003,36.38129895000003,120.10977542400008,36.38048748400007,120.10988509600008,36.37922573800006,120.11010620800005,36.37796388800007,120.11032731300008,36.376702038000076,120.11054841000009,36.37544018700004,120.11065780800004,36.37399820400003,120.11071271700007,36.373274405000075,120.11032184100009,36.372826985000074,120.11043238500008,36.37219605900003,120.11098828000002,36.371294367000075,120.11154519200011,36.371113613000034,120.11310539300007,36.37120226400003,120.11388529700002,36.37111140500008,120.11611155800006,36.36948714400006,120.11666777200003,36.36885577800007,120.11677839400011,36.368314964000035,120.11677745100008,36.36768414100004,120.1165536530001,36.367053535000025,120.1158842850001,36.36651348000004,120.11421130000008,36.365433677000055,120.11290558600001,36.364590888000066,120.11276107800006,36.36426352400008,120.11275977800005,36.36336234700008,120.11287029000005,36.36273141800007,120.11342543600006,36.36137912500004,120.11442557500004,36.35957581500003,120.11520363500006,36.35831341700003,120.11553748100005,36.35804274100008,120.11709310600008,36.35524757200005,120.11964783400003,36.35019843500004,120.12087025200003,36.34748158100007,120.12175720900007,36.34551016700004,120.12178274100006,36.345456263000074,120.12231236200012,36.344338065000045,120.12253841800009,36.34390547400005])
                    ),
                    vertexFormat: BcEngineX.EllipsoidSurfaceAppearance.VERTEX_FORMAT,
                    height: 3,
                    extrudedHeight: 0,
                })
            }),
            new BcEngineX.GeometryInstance({
                geometry: new BcEngineX.PolygonGeometry({
                    polygonHierarchy: new BcEngineX.PolygonHierarchy(
                        BcEngineX.Cartesian3.fromDegreesArray([120.12178274100006,36.345456263000074,120.1198110140001,36.34467992300006,120.11707705200001,36.34360338400006,120.11319065600003,36.34207289600005,120.11027683100008,36.34092528900004,120.10179530500011,36.337483355000074,120.09935433600003,36.33603878300005,120.09801630200002,36.334898054000064,120.09600866100004,36.33264672700005,120.09488747700004,36.331389383000044,120.09344447300009,36.33057603900005,120.0913272790001,36.32967649200003,120.0890990690001,36.32904734500005,120.08677164300002,36.32839013000006,120.07695868400003,36.328396851000036,120.07473151200008,36.32869671800006,120.07295021200002,36.32941876600006,120.0707238660001,36.33068176000006,120.06927717400004,36.332034383000064,120.0681648850001,36.33374727000006,120.06594213700009,36.339516084000024,120.05838277600003,36.35970645900005,120.0580497950001,36.36141886100006,120.05760717100009,36.36556449500006,120.05739020500005,36.367596424000055,120.05705208100005,36.36835841300007,120.05683053300004,36.37016087400008,120.0563851930001,36.370701791000045,120.05586839400007,36.371086054000045,120.05565192800009,36.37124700500004,120.05565091800008,36.37124775500007,120.05548540900008,36.36971091600003,120.05548383900009,36.36749886700005,120.05548384000008,36.36749884100004,120.0562677900001,36.36241101000007,120.0564892000001,36.36042831200007,120.05685590400003,36.35908538100006,120.05760106100001,36.35727365400004,120.0580459140001,36.35619202400005,120.05915032700011,36.35354111100003,120.06080310900006,36.349155852000024,120.06215972000007,36.34555602700004,120.06338246100006,36.34231113200008,120.06504967900003,36.337894445000074,120.06616057100007,36.33437922400003,120.0668274730001,36.332756724000035,120.06838496900002,36.33068312200004,120.06949784900007,36.329691178000076,120.07049957200002,36.32896964500003,120.07194668300008,36.32815771700007,120.0748415060001,36.32725475600006,120.07606641400002,36.32707374600005,120.08007567600009,36.326981009000065,120.08185749100005,36.32686750000005,120.0875408180001,36.32686347200007,120.08865122600002,36.32697495600007,120.09043336600007,36.32715385800003,120.09193645500011,36.32752566200003,120.09288449100006,36.32796304300007,120.09366452800009,36.328322908000075,120.09533632500006,36.32931288800006,120.09633969000004,36.33012314800004,120.09857048700007,36.33273476000005,120.10066856600008,36.33483011000004,120.10191549300009,36.335525620000055,120.103372938,36.33633851800005,120.10558951000007,36.33715134800008,120.10826793400008,36.33813346300008,120.11071971400008,36.33903239800003,120.11636198300005,36.341265075000024,120.11642766200009,36.34129345800005,120.1178528800001,36.341909358000066,120.1205439690001,36.34307222000007,120.12097394500006,36.343258011000046,120.12253841800009,36.34390547400005,120.12231236200012,36.344338065000045,120.12178274100006,36.345456263000074])
                    ),
                    vertexFormat: BcEngineX.EllipsoidSurfaceAppearance.VERTEX_FORMAT,
                    height: 3,
                    extrudedHeight: 0,
                })
            }),
        ],
        // 可以设置内置的水面shader
        appearance: new BcEngineX.EllipsoidSurfaceAppearance({
            aboveGround: true,
            material: new BcEngineX.Material({
                fabric: {
                    type: 'Water',
                    uniforms: {
                        normalMap: './image/waterNormals.jpg',
                        frequency: 1000.0,
                        animationSpeed: 0.05,
                        amplitude: 5.0
                    }
                }
            }),
            fragmentShaderSource: 'varying vec3 v_positionMC;\nvarying vec3 v_positionEC;\nvarying vec2 v_st;\nvoid main()\n{\nczm_materialInput materialInput;\nvec3 normalEC = normalize(czm_normal3D * czm_geodeticSurfaceNormal(v_positionMC, vec3(0.0), vec3(1.0)));\n#ifdef FACE_FORWARD\nnormalEC = faceforward(normalEC, vec3(0.0, 0.0, 1.0), -normalEC);\n#endif\nmaterialInput.s = v_st.s;\nmaterialInput.st = v_st;\nmaterialInput.str = vec3(v_st, 0.0);\nmaterialInput.normalEC = normalEC;\nmaterialInput.tangentToEyeMatrix = czm_eastNorthUpToEyeCoordinates(v_positionMC, materialInput.normalEC);\nvec3 positionToEyeEC = -v_positionEC;\nmaterialInput.positionToEyeEC = positionToEyeEC;\nczm_material material = czm_getMaterial(materialInput);\n#ifdef FLAT\ngl_FragColor = vec4(material.diffuse + material.emission, material.alpha);\n#else\ngl_FragColor = czm_phong(normalize(positionToEyeEC), material);\ngl_FragColor.a=0.45;\n#endif\n}\n' //重写shader，修改水面的透明度
        })
    });

    // scene.primitives.add(waterPrimitive);
    scene.primitives.add(waterPrimitive2);
}

// 加载模型
function addGraph(bcScene, graph) {
    // console.log(graph)
    if (!graph.useMatrix) {
        graph.modelMatrix = undefined;
    }
    graph.url = cimUrl + graph.url;
    let modelLayer = bcScene.modelLayerManager.addLayer(graph);
    // 图层模型数据即将渲染时
    if (modelLayer.modelReadyEvent) {
        modelLayer.modelReadyEvent.addEventListener(() => {
            if (graph.autoFlyto) {
                scene.fly2front(modelLayer, {
                    // heading: -90,
                    pitch: -180,
                    roll: 45,
                    rangeFactor: 2
                });
            }
        });
    }
    return modelLayer;
}

function removeGraph(bcScene, modelLayer) {
    bcScene.modelLayerManager.remove(modelLayer);
}

// 自定义天空盒配置
let skyBoxOptions = {
    // 默认天空盒
    defaultSkyBox: undefined,
    // 自定义天空盒
    groundSkyBox: undefined,
    // 内置天空盒
    skyBox: {
        blueSky: {
            positiveX: './BcEngineX/SkyBox/blueSky/px.jpg',
            negativeX: './BcEngineX/SkyBox/blueSky/nx.jpg',
            positiveY: './BcEngineX/SkyBox/blueSky/py.jpg',
            negativeY: './BcEngineX/SkyBox/blueSky/ny.jpg',
            positiveZ: './BcEngineX/SkyBox/blueSky/pz.jpg',
            negativeZ: './BcEngineX/SkyBox/blueSky/nz.jpg',
        },
        sky00: {
            positiveX: './BcEngineX/SkyBox/Sky_00/px.jpg',
            negativeX: './BcEngineX/SkyBox/Sky_00/nx.jpg',
            positiveY: './BcEngineX/SkyBox/Sky_00/py.jpg',
            negativeY: './BcEngineX/SkyBox/Sky_00/ny.jpg',
            positiveZ: './BcEngineX/SkyBox/Sky_00/pz.jpg',
            negativeZ: './BcEngineX/SkyBox/Sky_00/nz.jpg',
        },
        sky01: {
            positiveX: './BcEngineX/SkyBox/Sky_01/px.jpg',
            negativeX: './BcEngineX/SkyBox/Sky_01/nx.jpg',
            positiveY: './BcEngineX/SkyBox/Sky_01/py.jpg',
            negativeY: './BcEngineX/SkyBox/Sky_01/ny.jpg',
            positiveZ: './BcEngineX/SkyBox/Sky_01/pz.jpg',
            negativeZ: './BcEngineX/SkyBox/Sky_01/nz.jpg',
        },
        sky06: {
            positiveX: './BcEngineX/SkyBox/Sky_06/px.jpg',
            negativeX: './BcEngineX/SkyBox/Sky_06/nx.jpg',
            positiveY: './BcEngineX/SkyBox/Sky_06/py.jpg',
            negativeY: './BcEngineX/SkyBox/Sky_06/ny.jpg',
            positiveZ: './BcEngineX/SkyBox/Sky_06/pz.jpg',
            negativeZ: './BcEngineX/SkyBox/Sky_06/nz.jpg',
        },
        sky07: {
            positiveX: './BcEngineX/SkyBox/Sky_07/px.jpg',
            negativeX: './BcEngineX/SkyBox/Sky_07/nx.jpg',
            positiveY: './BcEngineX/SkyBox/Sky_07/py.jpg',
            negativeY: './BcEngineX/SkyBox/Sky_07/ny.jpg',
            positiveZ: './BcEngineX/SkyBox/Sky_07/pz.jpg',
            negativeZ: './BcEngineX/SkyBox/Sky_07/nz.jpg',
        },
        sky09: {
            positiveX: './BcEngineX/SkyBox/Sky_09/px.jpg',
            negativeX: './BcEngineX/SkyBox/Sky_09/nx.jpg',
            positiveY: './BcEngineX/SkyBox/Sky_09/py.jpg',
            negativeY: './BcEngineX/SkyBox/Sky_09/ny.jpg',
            positiveZ: './BcEngineX/SkyBox/Sky_09/pz.jpg',
            negativeZ: './BcEngineX/SkyBox/Sky_09/nz.jpg',
        }
    }
}
// 初始化天空盒
function initSkyBox(scene) {
    skyBoxOptions.defaultSkyBox = scene._scene.skyBox;
    // 事件监听天空盒置换
    scene._scene.postRender.addEventListener(() => {
        let e = scene._viewer.camera.position
        if (BcEngineX.Cartographic.fromCartesian(e).height < 50000) {
            scene._scene.skyAtmosphere.show = false;
            scene._scene.skyBox = skyBoxOptions.groundSkyBox;
        } else {
            scene._scene.skyAtmosphere.show = true;
            scene._scene.skyBox = skyBoxOptions.defaultSkyBox;
        }
    });
}

// 设置天空盒
function setSkyBox(box) {
    box = box || skyBoxOptions.skyBox.blueSky;
    skyBoxOptions.groundSkyBox = new BcEngineX.GroundSkyBox({
        sources: box
    });
}

